{"version":3,"sources":["components/Menu.jsx","components/resident/ResidentList.jsx","components/resident/MainPage.jsx","components/resident/MainTabs.jsx","components/program/ProgramList.jsx","components/program/MainPage.jsx","components/program/MainTabs.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MainPage","react_default","a","createElement","className","react_router_dom","to","Component","ResidentList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","residents","isLoading","_this2","fetch","method","headers","Content-type","Authorization","then","res","json","response","setState","catch","error","console","log","handleReload","listRef","current","reload","React","createRef","resident","ResidentList_ResidentList","MainTabs","renderMenu","Fragment","id","exact","activeClassName","style","marginLeft","renderEditMenu","concat","edit","editRes","idRes","location","pathname","match","parseInt","FetchProgramsFromWelbi","programs","JSON","stringify","program","ProgramList_FetchProgramsFromWelbi","App","react_router","path","element","Menu_MainPage","MainTabs_MainTabs","MainPage_MainPage","ResidentEdit_default","program_MainTabs_MainTabs","program_MainPage_MainPage","ProgramEdit_default","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.a9a05be5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class MainPage extends Component {\n    render() {\n        return <div className='wrapper text-center'>\n            <Link to={'/resident'}> className={'box'}\n                <div className='card-icon'>\n                    {/* <img src=\"\" alt=\"no image\" /> */}\n                </div>\n                <h3>Residents</h3>\n                <p className='card-description'>This is where you can view and edit your residents.</p>\n            </Link>\n\n            <Link to={'/program'}> className={'box'}\n                <div className='card-icon'>\n                    {/* <img src=\"\" alt=\"no image\" /> */}\n                </div>\n                <h3>Programs</h3>\n                <p className='card-description'>This is where you can view and edit your programs.</p>\n            </Link>\n        </div>\n    }\n}","import React, { Component } from 'react';\n\nexport default class ResidentList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            residents: [],\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://welbi.org/api/residents\", {\n            method: 'GET',\n            // body: JSON.stringify(data), // data can be string or object\n            headers:{\n                'Content-type': 'application/json',\n                'Authorization': \"Bearer 206fa34d-e89e-4c56-ab74-50d137a9b39b\",\n            }\n          }).then(res => res.json()) // if response is json, for text use res.text()\n          .then((response) => {\n            // console.log('Response:', JSON.stringify(response));\n            // console.log('Response:', response)\n            this.setState({ residents: response, isLoading: false });\n          }) // if text, no need for JSON.stringify\n          .catch(error => console.error('Error:', error));  \n    }\n\n\n    render() {\n        const {residents} = this.state;\n        console.log(residents);\n\n        return (\n            <div className=\"json-viewer\">\n                <header className=\"App-header\">\n                    <p>\n                        Fetch residents from Welbi platform.\n                    </p>\n                </header>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport ResidentList from './ResidentList';\n\nexport default class MainPage extends Component {\n    cinstructor(props) {\n        this.listRef = React.createRef();\n        this.state = {\n            resident: '',\n        }\n    }\n    \n    handleReload = () => {\n        this.listRef.current.reload();\n    }\n    \n    render() {\n        return <div className='wrapper text-center'>\n            <ResidentList />\n            {/* <ResidentList ref={this.listRef} {...this.props} filterValues = {{resident: this.state.resident}} /> */}\n        </div>\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default class MainTabs extends Component {\n    renderMenu = () => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Residents</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident/add' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Resident</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    renderEditMenu = (id) => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Residents</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to={`/resident/${id}/edit`} exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-info' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>Details</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident/add' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Resident</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    render() {\n        let id, edit;\n        let editRes, idRes;\n        if(this.props.location) {\n            let editRegex = /\\/([a-z0-9\\-]{36})/;\n            editRes = this.props.location.pathname.match(editRegex);\n            if(editRes && editRes[1]) {\n                edit = editRes[1];\n            }\n\n            let idRegex = /\\/([0-9]+\\/)/;\n            idRes = this.props.location.pathname.match(idRegex);\n            if(idRes && idRes[1]) {\n                id = parseInt(idRes[1]);\n            }\n        }\n\n        return (\n            <ul className='nav nav-tabs'>\n                {id && this.renderEditMenu(id, edit)}\n                {(!id && !edit) && this.renderMenu()}\n            </ul>\n        )\n    }\n\n    static propTypes = {\n        location: PropTypes.object,\n        history: PropTypes.object,\n        match: PropTypes.object\n    }\n}","import React, { Component } from 'react';\n\nexport default class FetchProgramsFromWelbi extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            programs: [],\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://welbi.org/api/programs\", {\n            method: 'GET',\n            // body: JSON.stringify(data), // data can be string or object\n            headers:{\n                'Content-type': 'application/json',\n                'Authorization': \"Bearer 206fa34d-e89e-4c56-ab74-50d137a9b39b\",\n            }\n          }).then(res => res.json()) // if response is json, for text use res.text()\n          .then((response) => {\n            console.log('Response:', JSON.stringify(response))\n          }) // if text, no need for JSON.stringify\n          .catch(error => console.error('Error:', error));  \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p>\n                        Fetch programs from Welbi platform.\n                    </p>\n                </header>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport ProgramList from './ProgramList';\n\nexport default class MainPage extends Component {\n    cinstructor(props) {\n        this.listRef = React.createRef();\n        this.state = {\n            program: '',\n        }\n    }\n    \n    handleReload = () => {\n        this.listRef.current.reload();\n    }\n    \n    render() {\n        return <div className='wrapper text-center'>\n            <ProgramList />\n            {/* <ResidentList ref={this.listRef} {...this.props} filterValues = {{resident: this.state.resident}} /> */}\n        </div>\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default class MainTabs extends Component {\n    renderMenu = () => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Programs</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program/add' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Programs</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    renderEditMenu = (id) => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Programs</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to={`/program/${id}/edit`} exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-info' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>Details</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program/add' exact={true} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Programs</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    render() {\n        let id, edit;\n        let editRes, idRes;\n        if(this.props.location) {\n            let editRegex = /\\/([a-z0-9\\-]{36})/;\n            editRes = this.props.location.pathname.match(editRegex);\n            if(editRes && editRes[1]) {\n                edit = editRes[1];\n            }\n\n            let idRegex = /\\/([0-9]+\\/)/;\n            idRes = this.props.location.pathname.match(idRegex);\n            if(idRes && idRes[1]) {\n                id = parseInt(idRes[1]);\n            }\n        }\n\n        return (\n            <ul className='nav nav-tabs'>\n                {id && this.renderEditMenu(id, edit)}\n                {(!id && !edit) && this.renderMenu()}\n            </ul>\n        )\n    }\n\n    static propTypes = {\n        location: PropTypes.object,\n        history: PropTypes.object,\n        match: PropTypes.object\n    }\n}","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Menu from './components/Menu';\nimport ResidentMainPage from './components/resident/MainPage';\nimport ResidentMainTabs from './components/resident/MainTabs';\nimport ResidentEdit from './components/resident/ResidentEdit';\nimport ProgramMainPage from './components/program/MainPage';\nimport ProgramMainTabs from './components/program/MainTabs';\nimport ProgramEdit from './components/program/ProgramEdit';\n\nexport default class App extends Component {\n    render() {\n        return (\n            < BrowserRouter>\n                <Routes>\n                    <Route exact path=\"/\" element={<Menu />} />\n\n                    <Route path=\"/resident\" element={<ResidentMainTabs />} />\n                    <Route path=\"/resident\" element={<ResidentMainPage />} />\n                    <Route path=\"/resident/add\" element={<ResidentEdit />} />\n                    <Route path=\"/resident/:id/edit\" element={<ResidentEdit />} />\n\n                    <Route path=\"/program\" element={<ProgramMainTabs />} />\n                    <Route path=\"/program\" element={<ProgramMainPage />} />\n                    <Route path=\"/program/add\" element={<ProgramEdit />} />\n                    <Route path=\"/program/:id/edit\" element={<ProgramEdit />} />\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}