{"version":3,"sources":["components/Menu.jsx","components/resident/ResidentList.jsx","components/resident/MainPage.jsx","components/resident/MainTabs.jsx","components/resident/ResidentEdit.jsx","components/program/ProgramList.jsx","components/program/MainPage.jsx","components/program/MainTabs.jsx","components/program/ProgramEdit.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Menu","react_default","a","createElement","className","react_router_dom","to","Component","jQuery","window","ResidentList","moment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","draw","dt","api","table","React","createRef","listRef","current","DataTable","responsive","processing","serverSide","searching","stateSave","autoWidth","deferRender","dom","buttons","pageLength","ajax","data","callback","fetch","method","headers","Content-type","Authorization","then","res","json","response","catch","error","console","order","columns","name","title","Fragment","ref","MainPage","handleReload","reload","state","resident","log","ResidentList_ResidentList","assign","filterValues","MainTabs","renderMenu","id","activeClassName","style","marginLeft","renderEditMenu","concat","edit","editRes","idRes","location","pathname","match","parseInt","ResidentEdit","residents","isLoading","ProgramList","programs","program","ProgramList_ProgramList","ProgramEdit","JSON","stringify","App","react_router","exact","path","element","Menu_Menu","MainTabs_MainTabs","MainPage_MainPage","ResidentEdit_ResidentEdit","program_MainTabs_MainTabs","program_MainPage_MainPage","ProgramEdit_ProgramEdit","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.586486df.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Menu extends Component {\n    render() {\n        return <div className='wrapper text-center'>\n            <Link to={'/resident'}> className={'box'}\n                <div className='card-icon'>\n                    {/* <img src=\"/assets/images/images.png\" alt=\"no resident\" /> */}\n                </div>\n                <h3>Residents</h3>\n                <p className='card-description'>This is where you can view and edit your residents.</p>\n            </Link>\n\n            <Link to={'/program'}> className={'box'}\n                <div className='card-icon'>\n                    {/* <img src=\"\" alt=\"no image\" /> */}\n                </div>\n                <h3>Programs</h3>\n                <p className='card-description'>This is where you can view and edit your programs.</p>\n            </Link>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nconst jQuery = window.jQuery, moment = window.moment;\n\nexport default class ResidentList extends Component {\n    constructor(props) {\n        super(props);\n        this.table = React.createRef();\n        this.listRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.dt = jQuery(this.table.current).DataTable({\n            'responsive': true,\n            'processing': true,\n            'serverSide': false,\n            'searching': true,\n            'stateSave': false,\n            'autoWidth': false,\n            'deferRender': true,\n            'dom': '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6\"f>><\"row\"<\"col-sm-12 col-md-12\"tr>><\"row\"<\"col-sm-12 col-md-5\"i><\"col-sm-12 col-md-7\"p>>',\n            'buttons': [\n                'copy', 'excel', 'pdf', 'colvis', 'print', 'pageLength'\n            ],\n            'pageLength': 10,\n            'ajax': (data, callback) => {\n                fetch(\"https://welbi.org/api/residents\", {\n                    method: 'GET',\n                    // body: JSON.stringify(data), // data can be string or object\n                    headers: {\n                        'Content-type': 'application/json',\n                        'Authorization': \"Bearer 88a8ae6c-6b3e-400e-b052-48680a8aff14\",\n                    }\n                }).then(res => res.json()) // if response is json, for text use res.text()\n                    .then((response) => {\n                        // console.log('Response:', JSON.stringify(response));\n                        // console.log('Response:', response)\n                        // this.setState({ residents: response, isLoading: false });\n                        if (response) {\n                            callback({\n                                data: response\n                            });\n                        } else {\n                            callback({\n                                data: []\n                            });\n                        }\n                    }) // if text, no need for JSON.stringify\n                    .catch(error => {\n                        console.error('Error:', error);\n                        callback({\n                            data: []\n                        });\n                    });\n            },\n            'order': [[0, 'desc']],\n            'columns': [\n                { data: 'id', name: 'id', title: 'ID' },\n                { data: 'name', name: 'name', title: 'Name' },\n                { data: 'firstName', name: 'firstName', title: 'First Name' },\n                { data: 'lastName', name: 'lastName', title: 'Last Name' },\n                { data: 'preferredName', name: 'preferredName', title: 'Preferred Name' },\n                { data: 'status', name: 'status', title: 'Status' },\n                { data: 'room', title: 'Room' },\n                { data: 'levelOfCare', title: 'Level of Care' },\n                { data: 'ambulation', title: 'Ambulation' },\n                { data: 'birthDate', title: 'Birth Date' },\n                { data: 'moveInDate', title: 'Move In Date' },\n                { data: 'created_at', title: 'Created At' },\n                { data: 'updated_at', title: 'Updated At' },\n                { data: 'attendance', name: 'attendance', title: 'Attendance' },\n                { data: null, title: 'Actions' }\n            ],\n        })\n    }\n\n    draw = () => {\n        this.dt.api().draw();\n    }\n\n    shouldComponentUpdate() {\n        return false;\n    }\n\n\n    render() {\n        return (\n            <>\n                <table ref={this.table} className='table table-striped' />\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport ResidentList from './ResidentList';\n\nexport default class MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n        this.state = {\n            resident: '',\n        }\n    }\n\n    handleReload = () => {\n        this.listRef.current.reload();\n    }\n\n    render() {\n        console.log(\";;;\");\n        return (\n            <>\n                <ResidentList ref={this.listRef} {...this.props} filterValues={{ resident: this.state.resident }} />\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default class MainTabs extends Component {\n    renderMenu = () => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident' className='nav-link' activeClassName='selected'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Residents</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/resident/add' className='nav-link' activeClassName='selected'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Resident</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    renderEditMenu = (id) => {\n        return (\n            <>\n                <li className='nav-item'>\n                    <NavLink to='/resident' className='nav-link' activeClassName='selected'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Residents</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item'>\n                    <NavLink to={`/resident/${id}/edit`} className='nav-link' activeClassName='selected'>\n                        <i className='fas fa-info' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>Details</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item'>\n                    <NavLink to='/resident/add' className='nav-link' activeClassName='selected'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Resident</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    render() {\n        let id, edit;\n        let editRes, idRes;\n        if(this.props.location) {\n            let editRegex = /\\/([a-z0-9-]{36})/;\n            editRes = this.props.location.pathname.match(editRegex);\n            if(editRes && editRes[1]) {\n                edit = editRes[1];\n            }\n\n            let idRegex = /\\/([0-9]+\\/)/;\n            idRes = this.props.location.pathname.match(idRegex);\n            if(idRes && idRes[1]) {\n                id = parseInt(idRes[1]);\n            }\n        }   \n\n        return (\n            <ul className='nav nav-tabs'>\n                {id && this.renderEditMenu(id, edit)}\n                {(!id && !edit) && this.renderMenu()}\n            </ul>\n        )\n    }\n\n    static propTypes = {\n        location: PropTypes.object,\n        history: PropTypes.object,\n        match: PropTypes.object\n    }\n}","import React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nconst jQuery = window.jQuery, moment = window.moment;\n\nexport default class ResidentEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            residents: [],\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        // fetch(\"https://welbi.org/api/residents\", {\n        //     method: 'GET',\n        //     // body: JSON.stringify(data), // data can be string or object\n        //     headers:{\n        //         'Content-type': 'application/json',\n        //         'Authorization': \"Bearer 88a8ae6c-6b3e-400e-b052-48680a8aff14\",\n        //     }\n        //   }).then(res => res.json()) // if response is json, for text use res.text()\n        //   .then((response) => {\n        //     // console.log('Response:', JSON.stringify(response));\n        //     console.log('Response:', response)\n           \n        //     this.setState({ residents: response, isLoading: false });\n        //   }) // if text, no need for JSON.stringify\n        //   .catch(error => console.error('Error:', error));  \n    }\n\n\n    render() {\n        return (\n            <div className=\"json-viewer\">\n                <header className=\"App-header\">\n                    <p>\n                        Fetch residents from Welbi platform.\n                    </p>\n                </header>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class ProgramList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            programs: [],\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        // fetch(\"https://welbi.org/api/programs\", {\n        //     method: 'GET',\n        //     // body: JSON.stringify(data), // data can be string or object\n        //     headers:{\n        //         'Content-type': 'application/json',\n        //         'Authorization': \"Bearer 88a8ae6c-6b3e-400e-b052-48680a8aff14\",\n        //     }\n        //   }).then(res => res.json()) // if response is json, for text use res.text()\n        //   .then((response) => {\n        //     console.log('Response:', JSON.stringify(response))\n        //   }) // if text, no need for JSON.stringify\n        //   .catch(error => console.error('Error:', error));  \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p>\n                        Fetch programs from Welbi platform.\n                    </p>\n                </header>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport ProgramList from './ProgramList';\n\nexport default class MainPage extends Component {\n    cinstructor(props) {\n        this.listRef = React.createRef();\n        this.state = {\n            program: '',\n        }\n    }\n    \n    handleReload = () => {\n        this.listRef.current.reload();\n    }\n    \n    render() {\n        return <div className='wrapper text-center'>\n            <ProgramList />\n            {/* <ResidentList ref={this.listRef} {...this.props} filterValues = {{resident: this.state.resident}} /> */}\n        </div>\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport default class MainTabs extends Component {\n    renderMenu = () => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program' className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Programs</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program/add' className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Programs</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    renderEditMenu = (id) => {\n        return (\n            <>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program' className='nav-link' activeClassName='active'>\n                        <i className='fas fa-list' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>All Programs</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to={`/program/${id}/edit`} className='nav-link' activeClassName='active'>\n                        <i className='fas fa-info' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>Details</label>\n                    </NavLink>\n                </li>\n                <li className='nav-item' id='nav-item-list'>\n                    <NavLink to='/program/add' className='nav-link' activeClassName='active'>\n                        <i className='fas fa-plus' /><label className='d-none d-sm-inline' style={{marginLeft: 5}}>New Programs</label>\n                    </NavLink>\n                </li>\n            </>\n        )\n    }\n\n    render() {\n        let id, edit;\n        let editRes, idRes;\n        if(this.props.location) {\n            let editRegex = /\\/([a-z0-9-]{36})/;\n            editRes = this.props.location.pathname.match(editRegex);\n            if(editRes && editRes[1]) {\n                edit = editRes[1];\n            }\n\n            let idRegex = /\\/([0-9]+\\/)/;\n            idRes = this.props.location.pathname.match(idRegex);\n            if(idRes && idRes[1]) {\n                id = parseInt(idRes[1]);\n            }\n        }\n\n        return (\n            <ul className='nav nav-tabs'>\n                {id && this.renderEditMenu(id, edit)}\n                {(!id && !edit) && this.renderMenu()}\n            </ul>\n        )\n    }\n\n    static propTypes = {\n        location: PropTypes.object,\n        history: PropTypes.object,\n        match: PropTypes.object\n    }\n}","import React, { Component } from 'react';\n\nexport default class ProgramEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            programs: [],\n            isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://welbi.org/api/programs\", {\n            method: 'GET',\n            // body: JSON.stringify(data), // data can be string or object\n            headers:{\n                'Content-type': 'application/json',\n                'Authorization': \"Bearer 88a8ae6c-6b3e-400e-b052-48680a8aff14\",\n            }\n          }).then(res => res.json()) // if response is json, for text use res.text()\n          .then((response) => {\n            console.log('Response:', JSON.stringify(response))\n          }) // if text, no need for JSON.stringify\n          .catch(error => console.error('Error:', error));  \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p>\n                        Fetch programs from Welbi platform.\n                    </p>\n                </header>\n            </div>\n        )\n    }\n}","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Menu from './components/Menu';\nimport ResidentMainPage from './components/resident/MainPage';\nimport ResidentMainTabs from './components/resident/MainTabs';\nimport ResidentEdit from './components/resident/ResidentEdit';\nimport ProgramMainPage from './components/program/MainPage';\nimport ProgramMainTabs from './components/program/MainTabs';\nimport ProgramEdit from './components/program/ProgramEdit';\n  \n\nexport default class App extends Component {\n    \n    render() {\n        return (\n            < BrowserRouter>\n                <Routes>\n                    <Route exact path=\"/\" element={<Menu />}></Route>\n\n                    <Route path=\"/resident\"  element={[<ResidentMainTabs />, <ResidentMainPage />]}></Route>\n                    <Route path=\"/resident/add\" element={<ResidentEdit />}></Route>\n                    <Route path=\"/resident/:id/edit\" element={<ResidentEdit />}></Route>\n\n                    <Route path=\"/program\" element={[<ProgramMainTabs />, <ProgramMainPage />]}></Route>\n                    <Route path=\"/program/add\" element={<ProgramEdit />}></Route>\n                    <Route path=\"/program/:id/edit\" element={<ProgramEdit />}></Route>\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}